global !p
import vim

# Tests for the existence of a variable declared by Vim's filetype detection
# suggesting the type of shell script of the current file
def testShell(scope, shell):
	return vim.eval("exists('" + scope + ":is_" + shell + "')")

# Loops over the possible variables, checking for global variables
# first since they indicate an override by the user.
def getShell():
	for scope in ["g", "b"]:
		for shell in ["bash", "posix", "sh", "kornshell"]:
			if testShell(scope, shell) == "1":
				if shell == "kornshell":
					return "ksh"
				if shell == "posix":
					return "sh"
				return shell
	return "sh"
endglobal

snippet c "case .. esac (case)" b
case "${1:word}" in
	${2:pattern}) $0;;
esac
endsnippet

snippet e "element) ...;;" b
${1:pattern}) $0;;
endsnippet

snippet #! "#!/usr/bin/env (!env)" b
#!/usr/bin/env bash
set -euo pipefail
endsnippet

snippet sd "script dir" b
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
endsnippet
