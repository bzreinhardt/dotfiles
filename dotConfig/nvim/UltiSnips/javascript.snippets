global !p
def stripType(name):
   if name.endswith('.ios'):
      return name[:-4]
   return name
endglobal

snippet rc "React class" b
export default class `!p snip.rv = stripType(snip.basename)` extends React.Component {
	constructor(props) {
		super(props);
	}

	componentDidMount() {
	}

	componentWillUnmount() {
	}

	render() {
		return (
            $0
		);
	}
}
endsnippet

snippet c "constructor" b
constructor(props) {
	super(props);

	$0
}
endsnippet

snippet cf "function" b
$1($2) {
    $0
}
endsnippet

snippet b "bind" b
this.$1 = this.$1.bind(this);
endsnippet

snippet p "React component props" b
const {$0} = this.props;
endsnippet

snippet s "React component state" b
const {$0} = this.state;
endsnippet

snippet ed "Export" b
export default ${1:`!p snip.rv = stripType(snip.basename)`};
endsnippet

snippet i "Import" b
import $1 from '${2:./$1}';
endsnippet

snippet ir "Import react" b
import React, {$0} from 'react-native';
endsnippet

snippet sty "Styles" b
const styles = {
	$1: {
		$0
	},
};
endsnippet

snippet cl "Console log" b
console.log(${1:\`$2\`});
endsnippet

snippet tl "Angular log" b
this.$log.info('$1', $2)
endsnippet
