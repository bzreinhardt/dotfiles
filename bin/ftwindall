#!/usr/bin/env bash
# ftwind - switch window (based on @george-b)
GREEN='\033[00;32m'
RESTORE='\033[0m'

display_all=false

if [ "$#" -ge 2 ]; then
  echo "Too many arguments"
  exit -1
fi

if [ "$#" -eq 1 ]; then
   if [ "$1" == "-a" ]; then
      display_all=true
   else
      echo "Unexpected argument \"$1\""
      exit -1
   fi
   shift
fi

window_sort_format="#{session_last_attached} #{window_stack_index}"
window_display_format="#{pane_current_path} #{window_name}"
# Get information about windows from tmux
if [ "$display_all" = true ] ; then
    window_id_format='#S:#I'
    list_windows_options='-a'
else
    window_id_format='#I'
    list_windows_options=''
fi
windows_str=$(
    tmux list-windows $list_windows_options -F \
    "$window_sort_format $window_id_format $window_display_format" \
    | sort -k 1nr -k 2n \
    | cut -d ' ' -f 3-
)

# Process windows_str
windows=''
delim=''
target_windows=()
while read -r line; do
   line_array=($line)

   target_window=${line_array[0]}
   dir_name=$(basename ${line_array[1]})
   name=${line_array[2]}

   # Create output line
   out=$(echo -e "$target_window\t$dir_name\t$name")

   # Add to windows string
   windows=$(printf '%s%s%s' "$windows" "$delim" "$out")

   # So that join works
   delim=$'\n'
done <<< "$windows_str"

# Align on columns
windows=$(column -s $'\t' -t <<< "$windows")

# Split by newlines
IFS=$'\n' read -rd '' -a window_arr <<<"$windows"

# Add * and number at beginning, as these aren't handled correctly by column
# command
windows=''
delim=''
for (( i=0; i<${#window_arr[*]}; ++i))
do
   out=$(echo -e "${window_arr[$i]}")
   windows=$(printf '%s%s%s%s' "$windows" "$delim" "$out")
   delim=$'\n'
done

# Run fzf and check result
target=$(echo "$windows" | fzf-tmux +m --reverse --ansi)
res=$?
[ "$res" -eq "130" ] && exit 0
[ "$res" -eq "0" ] || exit $res

# Extract window number, handling * correctly
target_window=$(echo "$target" | cut -d' ' -f1)

# Select window
tmux switch-client -t "$target_window"
