#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

uppercase() {
    perl -pe 's/(^|_)([a-z])/uc($2)/ge'
}

all_caps() {
    awk '{print toupper($0)}'
}

if [ $# -ne 2 ] ; then
    printf "Usage: moveRenamePython from_lower to_lower\n" 1>&2
    exit 1
fi

from_lower="$1"
to_lower="$2"

from_upper="$(echo "$from_lower" | uppercase)"
from_all_caps="$(echo "$from_lower" | all_caps)"
to_upper="$(echo "$to_lower" | uppercase)"
to_all_caps="$(echo "$to_lower" | all_caps)"

# Create new files from files that contain the source name as lower.
# Sort in reverse so that child paths are handled before their parents
fd "$from_lower" \
    | sort -r \
    | sed "s/\(.*\)$from_lower\(.*\)/mv & \1$to_lower\2/" \
    | sh

# Replace both forms in all files
if rg -q "$from_upper" ; then
    rg -l "$from_upper" \
        | xargs -n1 sed -i '' -e "s/$from_upper/$to_upper/g"
fi

if rg -q "$from_lower" ; then
    rg -l "$from_lower" \
        | xargs -n1 sed -i '' -e "s/$from_lower/$to_lower/g"
fi

if rg -q "$from_all_caps" ; then
    rg -l "$from_all_caps" \
        | xargs -n1 sed -i '' -e "s/$from_all_caps/$to_all_caps/g"
fi
